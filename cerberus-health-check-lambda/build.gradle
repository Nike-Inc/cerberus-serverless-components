import com.fieldju.gradle.plugins.lambdasam.tasks.MultiRegionPackageAndDeploySamTask

version '1.0.0'

shadowJar {
    baseName = 'cerberus-health-check-lambda'
    classifier = null
}

def awsSdkVersion = '1.12.145'

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'

    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j', version: '1.0.1'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '1.3.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-kms', version: "${awsSdkVersion}"
    compile "com.nike:cerberus-client:7.3.1"

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile 'org.jtwig:jtwig-core:5.85.3.RELEASE'
    compile 'junit:junit:4.12'
}

task deploy(type: MultiRegionPackageAndDeploySamTask) {
    regions = getProfileProperty('health_check.regions').split(/,/)
    stackName = "${project.environment}-${project.name}"
    templatePath = "${project.projectDir}${File.separator}sam.yaml"
    regionToS3BucketMap = getRegionBucketMap(getProfileProperty('cerberus.lambda_uploads_region_buckets'))
    tokenArtifactMap = [
            '@@CODE_URI@@': "${project.buildDir}${File.separator}libs${File.separator}${project.getName()}-${version}.jar"
    ]
    parameterOverrides = [
            CerberusUrl: getProfileProperty('cerberus.url'),
            CerberusEnvironment: "${project.environment}"
    ]
    logStackOutputs = true
}

tasks.deploy.dependsOn 'shadowJar'
