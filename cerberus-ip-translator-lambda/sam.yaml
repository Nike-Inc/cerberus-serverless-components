AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Cerberus Ip Translator Lambda
Parameters:
  SlackIcon:
    Type: String
    Description: URL of an icon image file to be used in Slack
  SlackToken:
    Type: String
    Description: The Slack Icoming Webhook token
    NoEcho: true
  SlackWebHookUrl:
    Type: String
    Description: The Slack HTTP endpoint to which the Lambda will post rate limit notifications
    NoEcho: true
  CerberusAdminIamRoleArn:
    Type: String
    Description: The Cerberus Admin Role Arn to use.
  AthenaQueryResultsBucket:
    Type: String
    Description: The Athena query results bucket
  CerberusUrl:
    Type: String
    Description: The Cerberus URL to gather SDB metadata
Resources:
  CerberusIpTranslatorLambdaIncomingWebhookFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: >-
        com.nike.cerberus.lambda.waf.Handler::handleSlackOutgoingWebHookEvent
      Runtime: java8
      Description: Function for ingesting rate limit Slack messages and doing search look up and response.
      MemorySize: 512
      Timeout: 300
      CodeUri: @@CODE_URI@@
      Role: !Ref CerberusAdminIamRoleArn
      Environment:
        Variables:
          CERBERUS_URL: !Ref CerberusUrl
          ATHENA_QUERY_RESULTS_BUCKET: !Ref AthenaQueryResultsBucket
          SLACK_INCOMING_WEB_HOOK_URL: !Ref SlackWebHookUrl
          SLACK_TOKEN: !Ref SlackToken
          SLACK_BOT_ICON_URL: !Ref SlackIcon
          REGION: !Ref AWS::Region
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /outgoing-webhook/
            Method: post
Outputs:
  WebhookEndpoint:
    Description: The health check endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ServerlessRestApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod/outgoing-webhook'
